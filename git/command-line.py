'''
You use all these devices to send data to a computer and receive data from it. But there's something else that supports communication with your devices. These are graphical user interfaces or GUIs which facilitate your interactions. GUIs are popular because they require very little training to use. GUIs offer an easy way to interact with devices, but they also somewhat limit the scope of human-computer interaction. As an alternative to GUIs and input devices such as microphones, you will learn to interact with your computer through the command line


By learning just a few commands, you can perform various tasks, such as creating new directories, creating new files, combining directories, copying and moving files around different directories, and searching through files using various criteria and keywords. As you become more advanced in using the command line, you will be able to perform tasks such as track software, access and control remote servers, search for files using specific criteria, unzip archives, access software manuals and display them in the command line. Install, upgrade, and uninstall software, and mount and unmount computer drives, or check disk space and so on.

But the list goes on. You can write scripts to automate various tasks, control user access to files and programs, stop, start and restart programs. Create aliases of only a few characters long to initiate very long commands, download files from the Internet, run various software, and finally, run and control self-contained virtual software, which is also known as containerization.

For example, on Linux, if I type cd tilde, forward slash and desktop, I will point the command line to the desktop of my computer. When you type cd.. you will move out of the current directory and back into the parent directory. Next is the touch command, which makes a new file of whatever type you specify. For example, to build a brand new file, you can run touch followed by the new file's name, for instance, example.txt. Note that the newly created file will be empty. You can also make new folders using the mkdir command. For example, mkdir followed by the title you want to give the new folder. To view a history of the most recently typed commands, you can use the history command.

I'll take you through a quick scenario as an example. Let's say you want to point the command line to the desktop directory and then add a new folder there titled myjsproject. Next, you want to point the command line to the myjsproject directory and make a new file, which you will call example.js. Finally, you want to open the example.js file in VS code. To do all of this, you will need to run the following commands. The first action you'll do is to use the change directory or cd command. Then you want to use the mkdir command to make the new folder. To move into the new folder directory, you use the cd command again, and then you use the touch command to create the file. The final command is the code command, which will open the file in VS code.
'''